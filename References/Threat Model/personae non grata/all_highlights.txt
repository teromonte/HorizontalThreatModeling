==============================
Title: Crowd Sourcing the Creation of Personae Non Gratae for Requirements-Phase Threat Modeling
==============================
yggIn most systems, security requirements, if they existat all, tend to be rather repetitive, specifying relativelyobvious features such as “Only authorized users shallaccess personal healthcare information.” Occasionally re-quirements are included that stem from regulatory con-trols, such as “An audit log must be maintained of everyaccess to the patient’s healthcare information.” As theATM fraud example shows, merely specifying securityfeatures is insuﬃcient—one needs to anticipate ways inwhich a system can be misused by adversaries. It is

This paper introduces the use of Personae non Gratae(PnGs) as a means to focus attention on early-phasethreat modeling. Personas have long been used for User

represent the intended archetypal users of the system. Incontrast, PnGs represent archetypal users who interactwith the system in unwanted ways, and as a result un-dermine the system’s security. In a recent study [20], wecompared the use of PnGs against two other threat mod-eling methods, STRIDE and Security Cards, and foundthat threat models built using PnGs exhibited a higherdegree of consistency than other techniques. Nonetheless,no individual threat model included all identiﬁed threats.In this paper, we therefore explore the idea of crowd-sourcing the task of threat identiﬁcation. Our approachuses information retrieval techniques to analyze the iden-tiﬁed threats, collate them, and provide the results to ahuman analyst to assist with construction of a uniﬁedthreat model.In the remainder of this paper, Section II provides anoverview of existing threat modeling techniques. SectionIII describes PnGs and their contribution to threat mod-eling. Sections IV and V present study data collection andanalysis methods. The paper ends with a discussion of theresults to date, threats to validity, and conclusions.II. Threat ModelingThere are many deﬁnitions of threat modeling. Based onour discussions with practicing threat modelers, we adoptthe deﬁnition that “a threat modeling method (TMM)is an approach for creating an abstraction of a softwaresystem, aimed at identifying attackers’ abilities and goals,and using that abstraction to generate and catalog possiblethreats that the system must mitigate.” [19]There are a number of threat modeling methods. Per-haps the most well-known and widely used TMM isSTRIDE. It was invented in 1999 by Kohnfelder & Garg[10], implemented at Microsoft, and widely adopted. Atypical STRIDE implementation includes modeling thesystem with Data Flow Diagrams (DFDs), mapping theDFDs to threat categories, determining the threats viathreat trees, and documenting the threats and steps fortheir prevention.Trike was developed in 2005 to improve on perceiveddeﬁciencies of STRIDE [18]. It is designed for securityauditing from a risk management perspective and modelsthreats from a defensive viewpoint (i.e., in contrast to anattacker’s viewpoint).The Process for Attack Simulation and Threat Analysis(PASTA) was developed around 2012 by Morana andUcedaVelez [23]; a companion book was published in 2015[13]. PASTA is a seven-stage process that yields the impactof threats to an application and business.Security Cards were developed at the University ofWashington by Tamara Denning, Batya Friedman, andTadayoshi Kohno [6], [5]. The stated purpose of SecurityCards is to facilitate the exploration of potential securitythreats for a particular system, and more broadly, to helpdevelop a security mindset. The audience envisioned forSecurity Cards includes educators, students, researchers,and practitioners. The use of Security Cards helps toanswer the following questions: If your system is com-promised, what human assets could be impacted? Whomight attack your system and why? What resources mightthe adversary have? How might the adversary attack yoursystem?A Misuse case [21] is a TMM that extends the popularuse case diagram to include security threats and coun-termeasures. A use case diagram, capturing core systemfunctionality, is transformed into a misuse case diagramby adding potential mis-actors (i.e., threat agents), unde-sirable mis-use cases (i.e., threats) that could potentiallydisrupt or otherwise harm the desired system functionality,and use cases that counter identiﬁed threats. As such,misuse case diagrams depict the interactions between badactors, threats, countermeasures, and the original usecases.III. Personae Non Gratae (PnGs)In this paper, we use PNGs to support threat modeling[3]. PnGs are inspired by the notion of personas in UXdesign and adopt several ideas inherent to Misuse cases.A. PersonasA persona provides a realistic and engaging represen-tation of a speciﬁc user group. It is typically depictedthrough a representative image and a personal descriptionthat portrays something about the pysche, background,emotions and attitudes, and personal traits of the ﬁctitiousperson [16], [14]. The task of creating a persona usu-ally involves surveying and interviewing users, identifyingoptimal ways for slicing users into categories, collectingdata to demonstrate that the proposed slices create dis-tinguishable user groups, discovering patterns within theuser groups, constructing personas for each group, andthen creating scenarios describing how the persona mightinteract with the system under development. A project willtypically have about 5-8 personas.While personas are typically used for purposes of UXdesign, there are examples in which they have been used aspart of the requirements elicitation and design process. Forexample, within the privacy literature, Spears and Erete[22] deﬁned a persona to elucidate a segment of end userswho are unconcerned about online behavioral tracking.In another example, Dotan et al. evaluated the use ofpersonas to communicate users’ goals and preferences toproject members as part of a two-day design workshop forthe APOSDLE project [7]. Similarly, Robertson et al. alsodiscussed the use of personas for gathering requirementswhen actual stakeholders are not available [17]. In theseexamples, the focus was on eliciting a general set of enduser goals and system requirements. Cleland-Huang etal. introduced the notion of using personas to analyzearchitectural goals [2] and PnGs for security threats [3].

In this paper, we use PNGs to support threat modeling[3]. PnGs are inspired by the notion of personas in UXdesign and adopt several ideas inherent to Misuse cases.

,pperson [16], [14]. The task of creating a persona usu-ally involves surveying and interviewing users, identifyingoptimal ways for slicing users into categories, collectingdata to demonstrate that the proposed slices create dis-tinguishable user groups, discovering patterns within theuser groups, constructing personas for each group, andthen creating scenarios describing how the persona mightinteract with the system under development. A project will

ggpginteract with the system under development. A project willtypically have about 5-8 personas.

B. Threat Modeling with PnGsPnGs represent archetypal users who behave in un-wanted, possibly nefarious ways. However, like ordinarypersonas, PnGs have speciﬁc goals that they wish toachieve, and speciﬁc actions that they may take to achievetheir goals. Modeling PnGs can therefore help us to thinkabout the ways in which a system might be vulnerableto abuse and use this information to specify appropriatemitigating requirements.ThePnGapproachmakesthreatmodelingmoretractable by asking users to focus on attackers, theirmotivations, and abilities. Once this step is completed,users are asked to brainstorm ideas about targets andlikely attack mechanisms that the attackers would deploy.The theory behind this approach is that if engineers canunderstand what capabilities an attacker may have, andwhat types of mechanisms they may use to compromise asystem, the engineers will gain a better understanding oftargets or weaknesses within their own systems and thedegree to which they can be compromised. Some criticsof this approach argue that a PnG can often take usersdown the wrong path. For example, for a system related tonational security, users might reason that the system maybe the target of a sophisticated attack from another nationstate. This conclusion, however, overlooks the fact that anation state might compromise a system ﬁrst through amuch simpler entry point and then ratchet up operationsfrom there.

==============================
Title: How_Well_Do_You_Know_Your_Personae_Non_Gratae
==============================
The most obvious technique lever-ages checklists and regulations. For example, in the US, all systems that involve the use of personal health-care data are governed by HIPAA’s (the Healthcare Information Por-tability and Accountability Act’s) technical safeguards, which stipu-late several security-related require-ments including access control, au-tomated logout, encryption of stored and transmitted data, and audit logs. Similarly, checklists can be very use-ful for ensuring that common secu-rity issues have been considered. On the other hand, neither of these ap-proaches helps us to think about se-curity risks that might be unique to our application, which means that on their own, they’re insufficient.

Three techniques are particularly useful for reasoning about, and de-fending against, our adversary, the malicious user.

bout how it could be either inten-onally or unintentionally abused. The most obvious technique lever-es checklists and regulations. For ample, in the US, all systems that volve the use of personal health-re data are governed by HIPAA’s he Healthcare Information Por-bility and Accountability Act’s) chnical safeguards, which stipu-te several security-related require-ents including access control, au-mated logout, encryption of stored nd transmitted data, and audit logs. milarly, checklists can be very use-l for ensuring that common secu-ty issues have been considered. On e other hand, neither of these ap-oaches helps us to think about se-urity risks that might be unique to ur application, which means that n their own, they’re insufficient.Three techniques are particularly eful for reasoning about, and de-nding against, our adversary, the alicious user.Personae non gratae build on the notion of designing for archetypical users and help us think strategically about the kinds of mischief a mali-cious user might attempt.2 Figure 1 shows, Hugh, a young man who in-tends to attack our system. I’ve kept Hugh’s goals quite generic, but we could create a persona non grata with more specific attack strategies to expose vulnerability points of the product. Creating such personas helps us take a more systematic ap-proach to addressing security con-cerns throughout the project. A related technique involves mis-use cases, which can be used to de-termine in advance how the software product should respond to unin-tended, perhaps malicious, use.3 In Figure 2’s simple misuse case, we see two intended actors: an insur-ance seeker and an insurance pro-vider, along with their related use cases for managing personal data and seeking/­providing insurance quotes.1 We also see security-related use cases that extend the primary

use cases to achieve access con-trol, privacy, integrity, and auditing goals. On the right side, we see two different types of malicious users—the cracker, who attempts to obtain private information for purposes such as identification theft, and the fraudulent insuree. This second ac-tor isn’t necessarily technically savvy but intends to trick the system into

illustrates how misuse cases can fo-cus attention on different kinds of abuses, help us explore each of these

providing insurance coverage that he’s not actually eligible for. While there isn’t space to explore these ideas in greater depth, this example illustrates how misuse cases can fo-

abuses, help us explore each of these in depth, determine a suitable set of mitigating requirements, and ulti-mately design cost-effective counter-measures into the system.

Finally, we could annotate activ-ity diagrams with security concerns.4Figure 3 depicts the healthcare in-surance seeker’s privacy needs, audit capabilities for documenting all offi -cial use of the healthcare record, and nonrepudiation requirements related to selecting and signing up for an in-surance plan.

